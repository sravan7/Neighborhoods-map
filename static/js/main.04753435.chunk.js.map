{"version":3,"sources":["map.js","App.js","serviceWorker.js","index.js"],"names":["Map","react_default","a","createElement","id","role","Component","App","currentLocation","state","query","mapIsReady","condition","map","initMap","script","document","src","concat","async","defer","addEventListener","_this","setState","body","appendChild","buildMap","google","window","here","Object","assertThisInitialized","bounds","maps","LatLngBounds","Infowindow","InfoWindow","getElementById","center","lat","lng","mapTypeControl","mapTypeControlOptions","style","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","RIGHT_BOTTOM","zoom","zoomControlOptions","RIGHT_CENTER","streetViewControlOptions","showWindow","marker","setContent","title","open","addListener","one","icon","arguments","length","undefined","setCenter","LatLng","location","Marker","name","url","animation","Animation","DROP","extend","markers","value","filter","fitBounds","getData","event","key","fetch","target","then","response","json","data","venues","catch","e","alert","this","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","push","error","console","code","message","enableHighAccuracy","maximumAge","currentTarget","dataset","_this2","className","src_map","type","placeholder","onKeyPress","aria-label","tabIndex","onClick","handle","bind","arira-label","String","href","justCall","data-id","parseInt","distance","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.04753435.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Map extends Component{\r\n  render(){\r\n    return(\r\n    <div id=\"map\" role=\"application\" />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './map'\nclass App extends Component {\n      currentLocation = [];\n      state = {\n        query:[],\n        mapIsReady: false,\n        condition: false,\n        map: {}\n      }\n\ninitMap = () =>{\n  const ApiKey = 'AIzaSyDTB3tbX3dMTxpoxaXHa-VaB0WQqNXAuOA';\n  const script = document.createElement('script');\n   script.src = `https://maps.googleapis.com/maps/api/js?key=${ApiKey}`;\n   script.async = true;\n   script.defer = true;\n   script.addEventListener('load', () => {\n     this.setState({ mapIsReady: true });\n   });\n   document.body.appendChild(script);\n}\nbuildMap =() => {\n  const google = window.google;\n  const here = this;\n  let bounds = new google.maps.LatLngBounds()\n  const Infowindow = new google.maps.InfoWindow();\n  let map= new google.maps.Map(document.getElementById('map'), {\n    center: {lat: here.currentLocation[0].lat , lng: here.currentLocation[0].lng},\n    mapTypeControl: true,\n          mapTypeControlOptions: {\n              style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n              position: google.maps.ControlPosition.RIGHT_BOTTOM\n          },\n    zoom: 11,\n    zoomControlOptions: {\n              position: google.maps.ControlPosition.RIGHT_CENTER\n          },\n    streetViewControlOptions: {\n            position: google.maps.ControlPosition.RIGHT_CENTER\n          },\n  })\n  const iconURL = \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\" ;\n  marker({location:{lat: here.currentLocation[0].lat, lng: here.currentLocation[0].lng, id: \"1\"}, name:\"your location\"},iconURL)\n  function showWindow(marker){\n    if (Infowindow.marker !== marker) {\n      Infowindow.marker = marker;\n      Infowindow.setContent('<div>' + marker.title + '</div>');\n      Infowindow.open(map, marker);\n\n    }\n    else {\n      Infowindow.addListener('closeclick', function() {\n        Infowindow.marker = null;\n      });\n    }\n  }\n function  marker (one,icon=\"\"){\n     if(one) {\n       map.setCenter(new google.maps.LatLng(one.location.lat, one.location.lng))\n       let marker = new google.maps.Marker({\n       position: {lat: one.location.lat, lng: one.location.lng},\n       map: map,\n       title: one.name,\n       icon : {\n         url : icon\n       },\n       animation: google.maps.Animation.DROP,\n       id: one.location.id\n     })\n     marker.addListener(\"click\", ()=>{\n       showWindow(marker)\n     })\n     bounds.extend(marker.position)\n     //console.log(typeof(marker));\n     return marker;\n     }\n\n  }\n  let markers =[];\n  if(this.state.query.length>0){\n    markers = this.state.query.map(marker)\n  }\n  function filterMarker(value) {\n    if(markers.length>0) {\n      markers.filter(marker => marker.title===value).map(showWindow)\n      map.fitBounds(bounds);\n    }\n  }\n  return filterMarker\n}\n\ncomponentDidMount(){\n  this.initMap();\n}\ncomponentDidUpdate(){\n  let lat= null;\n  let lng= null;\n  const here = this\n  if(navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position){\n       lat = position.coords.latitude;\n       lng = position.coords.longitude;\n       here.currentLocation.push({lat: lat, lng: lng})\n       if(here.state.mapIsReady) {\n         here.buildMap()\n       }\n    }, function(error) {console.error(`(${error.code}): ${error.message}`);},\n    {\n      enableHighAccuracy: true,\n      maximumAge: 0\n    }\n  )\n}\n}\ngetData = (event) =>{\n  if (event.key===\"Enter\" && this.currentLocation.length>0){\n    const here = this\n    const end_point = \"https://api.foursquare.com/v2/venues/search\"\n    const client_id = \"WVUL2XKHDR5KGZR1QUCEWPFCLX2MDEG3CMYGRB433X1YDT2J\";\n    const client_secret = \"Z0D12P1T5LAYCUDPHSPVKF5SEHWUAKM2KAJORQFCDXE2YDKZ\"\n    const lat = this.currentLocation[0].lat;\n    const lng = this.currentLocation[0].lng;\n    fetch(`${end_point}?client_id=${client_id}&client_secret=${client_secret}&v=20180323&limit=10&ll=${lat},${lng}&query=${event.target.value}`)\n    .then(response => response.json()).then(sample).catch(e => document.alert(e+\"error in fetching the data\"))\n    function sample(data) {\n      here.setState({query: data.response.venues})\n    }\n  }\n}\nhandle() {\n  this.setState({\n    condition: !this.state.condition\n  })\n}\njustCall(event){\n\n  this.buildMap()(event.currentTarget.dataset.id)\n}\nrender() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.mapIsReady ? <Map/> : <h2>Cant able to load the map</h2>\n        }\n        <div id=\"search\">\n            <input id=\"searchField\" type=\"text\" placeholder=\"coffee or chicken or Newyork \"  onKeyPress={(event)=>this.getData(event)} aria-label={\"search field\"} tabIndex={\"1\"} />\n        </div>\n        <button onClick={this.handle.bind(this)}  tabIndex={\"1\"} arira-label={\"toggle list\"} >&#9776;</button>\n        <ul className=\"cardList\" id={this.state.condition ? \"menu-hidden\" : \"\"} role=\"tablist\" >\n            {\n              this.state.query.length>0 ?  this.state.query.map(data =>(<li id=\"card\" key={String(data.id)} role=\"presentation\" tabIndex={\"-1\"} >\n            <a href=\"#\" onClick={this.justCall.bind(this)} data-id={String(data.name)} role=\"tab\" tabIndex={\"1\"}  > <h4>{String(data.name)}</h4> <p>Distance <span>{parseInt(parseInt(data.location.distance)*0.001)}Kms</span></p>\n           </a> </li>)): <h5> Search something</h5>\n            }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}